// <auto-generated />
using System;
using ITProjectPriceCalculationManager.ITProjectsManager.API.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITProjectPriceCalculationManager.ITProjectsManager.API.Migrations
{
    [DbContext(typeof(ITProjectPriceCalculationManagerDbContext))]
    [Migration("20240609123625_RenameColumn")]
    partial class RenameColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AverageCostLabor")
                        .HasColumnType("float");

                    b.Property<double>("AverageMonthlyRateWorkingHours")
                        .HasColumnType("float");

                    b.Property<double?>("ConfidenceArea")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Overhead")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Profit")
                        .HasColumnType("float");

                    b.Property<double>("SocialInsurance")
                        .HasColumnType("float");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("StatusId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.ProcedureApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AverageCostLabor")
                        .HasColumnType("float");

                    b.Property<double>("AverageMonthlyRateWorkingHours")
                        .HasColumnType("float");

                    b.Property<double?>("ConfidenceArea")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Overhead")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Profit")
                        .HasColumnType("float");

                    b.Property<double>("SocialInsurance")
                        .HasColumnType("float");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("StatusId");

                    b.ToTable("ProcedureApplications");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationForEvaluation.ApplicationForEvaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AverageCostLabor")
                        .HasColumnType("float");

                    b.Property<double>("AverageMonthlyRateWorkingHours")
                        .HasColumnType("float");

                    b.Property<double?>("ConfidenceArea")
                        .HasColumnType("float");

                    b.Property<double>("Overhead")
                        .HasColumnType("float");

                    b.Property<double>("Profit")
                        .HasColumnType("float");

                    b.Property<double>("SocialInsurance")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ApplicationForEvaluations");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationStatus.ApplicationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4706d234-e64d-4ab2-bed0-6086e10c3325"),
                            Name = "Нова"
                        },
                        new
                        {
                            Id = new Guid("c4a6971d-a0de-4d6d-97fe-67db465e330f"),
                            Name = "На оцінюванні"
                        },
                        new
                        {
                            Id = new Guid("9806f24d-89d7-42f5-80b4-d39ac7798949"),
                            Name = "На доопрацюванні"
                        },
                        new
                        {
                            Id = new Guid("56533c08-2c5b-4bba-8dc2-9efe0fb3dc66"),
                            Name = "Оцінено"
                        });
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationToEvaluator.ApplicationToEvaluator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ConfidenceArea")
                        .HasColumnType("float");

                    b.Property<Guid>("EvaluatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("SelfEvaluation")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("EvaluatorId");

                    b.ToTable("ApplicationToEvaluators");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationToFactor.ApplicationToFactor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DifficultyLevelsTypeToFactorTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Value")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("DifficultyLevelsTypeToFactorTypeId");

                    b.ToTable("ApplicationToFactors");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Attribute.Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a0822a4-7012-4738-889b-fafb713f72ea"),
                            Name = "Qualifications(PERS)"
                        },
                        new
                        {
                            Id = new Guid("24fbf4f3-aa84-4b17-9d2e-0ef16238a2ba"),
                            Name = "Experience(PREX)"
                        },
                        new
                        {
                            Id = new Guid("33e07ded-1bd4-4e9a-8076-f071ea1a5269"),
                            Name = "Technical support(FCIL)"
                        },
                        new
                        {
                            Id = new Guid("ea5a8d97-0940-4463-b07a-d6a10b6f0d08"),
                            Name = "Schedule restrictions(SCED)"
                        },
                        new
                        {
                            Id = new Guid("fe85d6ab-ade6-412f-b2a6-7ca97f4f1da4"),
                            Name = "Complexity of the program environment(PDIF)"
                        },
                        new
                        {
                            Id = new Guid("4feab03a-7415-4c72-8b3f-6901e014c25e"),
                            Name = "Complexity and reliability(RCPX)"
                        },
                        new
                        {
                            Id = new Guid("9b7d2f14-9ec0-414c-806b-d5e607664031"),
                            Name = "Reuse requested(RUSE)"
                        },
                        new
                        {
                            Id = new Guid("15140cfd-eacc-41f3-aae5-718980da88b9"),
                            Name = "Product novelty for the developer's company(PREC)"
                        },
                        new
                        {
                            Id = new Guid("b4a2b0b2-35c4-41d4-8ca7-1d2ebd1440e9"),
                            Name = "Development flexibility(FLEX)"
                        },
                        new
                        {
                            Id = new Guid("186476d2-772b-4eb1-b140-b0c1a238ae11"),
                            Name = "Level of risk/architecture management (%)(RESL)"
                        },
                        new
                        {
                            Id = new Guid("74b32655-e330-4e74-a1a2-e1e92023f676"),
                            Name = "Cohesion of the development team(TEAM)"
                        },
                        new
                        {
                            Id = new Guid("c69edb03-4fb6-4071-bcc5-f158808c69ee"),
                            Name = "Technology maturity maturity process development(PMAT)"
                        },
                        new
                        {
                            Id = new Guid("e777b5bf-559d-4194-a711-89ca4ca4a212"),
                            Name = "Internal logical object"
                        },
                        new
                        {
                            Id = new Guid("d7c7beea-3351-482b-82e1-8df4573395b9"),
                            Name = "External interface object"
                        },
                        new
                        {
                            Id = new Guid("73a3a716-f447-4057-99ca-1500d438ba58"),
                            Name = "External input"
                        },
                        new
                        {
                            Id = new Guid("31f2f6d6-a5fa-4da3-adcf-0a5cc237eb95"),
                            Name = "External output"
                        },
                        new
                        {
                            Id = new Guid("7a540a8b-0198-40d8-9185-2e02ba5eb1ab"),
                            Name = "External request"
                        });
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Department.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.DifficultyLevels.DifficultyLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EvaluationAttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RelationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationAttributeId");

                    b.ToTable("DifficultyLevels");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.DifficultyLevelsType.DifficultyLevelsType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DifficultyLevelsTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3b0177d-baf9-4ad6-b1c1-002e1b776a10"),
                            Name = "Super low"
                        },
                        new
                        {
                            Id = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            Name = "Very low"
                        },
                        new
                        {
                            Id = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            Name = "Low"
                        },
                        new
                        {
                            Id = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            Name = "Normal"
                        },
                        new
                        {
                            Id = new Guid("5540d80e-8fae-4afb-a475-b49c1a9c4c2e"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            Name = "High"
                        },
                        new
                        {
                            Id = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            Name = "Very high"
                        },
                        new
                        {
                            Id = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            Name = "Super high"
                        });
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.DifficultyLevelsTypeToFactorType.DifficultyLevelsTypeToFactorType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DifficultyLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FactorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FactorTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyLevelId");

                    b.HasIndex("FactorId");

                    b.HasIndex("FactorTypeId");

                    b.ToTable("DifficultyLevelsTypeToFactorTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d413d42-df92-483a-a769-3c70e6538bbd"),
                            DifficultyLevelId = new Guid("b3b0177d-baf9-4ad6-b1c1-002e1b776a10"),
                            FactorId = new Guid("7a0822a4-7012-4738-889b-fafb713f72ea"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 2.1200000000000001
                        },
                        new
                        {
                            Id = new Guid("bec1c811-5198-4c74-bd9c-d1dfdfb56432"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("7a0822a4-7012-4738-889b-fafb713f72ea"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.6200000000000001
                        },
                        new
                        {
                            Id = new Guid("83591b36-ccd6-451f-a908-4a241012e96b"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("7a0822a4-7012-4738-889b-fafb713f72ea"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.26
                        },
                        new
                        {
                            Id = new Guid("faf586cd-51bc-4a56-a10c-3d748355462c"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("7a0822a4-7012-4738-889b-fafb713f72ea"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.0
                        },
                        new
                        {
                            Id = new Guid("ad158205-ff97-42a2-9abc-0040a8560c7e"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("7a0822a4-7012-4738-889b-fafb713f72ea"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.82999999999999996
                        },
                        new
                        {
                            Id = new Guid("7b27efd0-fee3-4689-98cd-95c444fb04d5"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("7a0822a4-7012-4738-889b-fafb713f72ea"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.63
                        },
                        new
                        {
                            Id = new Guid("4a336b4d-61d9-48a1-970c-a0e69ac48fa7"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("7a0822a4-7012-4738-889b-fafb713f72ea"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.5
                        },
                        new
                        {
                            Id = new Guid("ee1e1078-41b2-43fc-b2ae-d4121c2b7ca2"),
                            DifficultyLevelId = new Guid("b3b0177d-baf9-4ad6-b1c1-002e1b776a10"),
                            FactorId = new Guid("24fbf4f3-aa84-4b17-9d2e-0ef16238a2ba"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.5900000000000001
                        },
                        new
                        {
                            Id = new Guid("5f200051-a4b6-45b9-b6ce-9ba41351849b"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("24fbf4f3-aa84-4b17-9d2e-0ef16238a2ba"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.3300000000000001
                        },
                        new
                        {
                            Id = new Guid("afb9e99d-f300-4ae4-b2d7-c3099a660f4d"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("24fbf4f3-aa84-4b17-9d2e-0ef16238a2ba"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.1200000000000001
                        },
                        new
                        {
                            Id = new Guid("8c955d7f-dcd0-474a-85d7-d77b2c3f39eb"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("24fbf4f3-aa84-4b17-9d2e-0ef16238a2ba"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.0
                        },
                        new
                        {
                            Id = new Guid("47464ce2-4daa-4d14-9e2d-285c254d0c27"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("24fbf4f3-aa84-4b17-9d2e-0ef16238a2ba"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.87
                        },
                        new
                        {
                            Id = new Guid("aa4b9e0c-0f9c-42d7-bca1-db48d90af5fc"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("24fbf4f3-aa84-4b17-9d2e-0ef16238a2ba"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.70999999999999996
                        },
                        new
                        {
                            Id = new Guid("aea4daa0-2f03-4ef1-8ef5-787e676924e4"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("24fbf4f3-aa84-4b17-9d2e-0ef16238a2ba"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.62
                        },
                        new
                        {
                            Id = new Guid("502fe0cf-563e-4d8e-b65e-2bd3415f777a"),
                            DifficultyLevelId = new Guid("b3b0177d-baf9-4ad6-b1c1-002e1b776a10"),
                            FactorId = new Guid("33e07ded-1bd4-4e9a-8076-f071ea1a5269"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.4299999999999999
                        },
                        new
                        {
                            Id = new Guid("2a9240e9-b392-4a31-8f55-fb1f3e1e7399"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("33e07ded-1bd4-4e9a-8076-f071ea1a5269"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.3
                        },
                        new
                        {
                            Id = new Guid("a17667db-caaf-4644-986a-c7909be4295f"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("33e07ded-1bd4-4e9a-8076-f071ea1a5269"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.1000000000000001
                        },
                        new
                        {
                            Id = new Guid("49543d41-1ce2-4d6c-9c7e-af9ffbdfae53"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("33e07ded-1bd4-4e9a-8076-f071ea1a5269"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.0
                        },
                        new
                        {
                            Id = new Guid("1c1f5991-cba7-4247-b338-5640d3237568"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("33e07ded-1bd4-4e9a-8076-f071ea1a5269"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.87
                        },
                        new
                        {
                            Id = new Guid("7e608ff2-0cbf-41bb-b0a1-f684d07536d8"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("33e07ded-1bd4-4e9a-8076-f071ea1a5269"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.72999999999999998
                        },
                        new
                        {
                            Id = new Guid("31712da9-288f-4a6d-9c08-f446c130986c"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("33e07ded-1bd4-4e9a-8076-f071ea1a5269"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.62
                        },
                        new
                        {
                            Id = new Guid("99555d3a-6b6d-42be-afe2-17ffae0547c4"),
                            DifficultyLevelId = new Guid("b3b0177d-baf9-4ad6-b1c1-002e1b776a10"),
                            FactorId = new Guid("ea5a8d97-0940-4463-b07a-d6a10b6f0d08"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("393ef14d-5612-4b29-979c-29b0e273bd1e"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("ea5a8d97-0940-4463-b07a-d6a10b6f0d08"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.4299999999999999
                        },
                        new
                        {
                            Id = new Guid("fb482a34-c3cf-40c9-9e34-72eac6668c4f"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("ea5a8d97-0940-4463-b07a-d6a10b6f0d08"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.1399999999999999
                        },
                        new
                        {
                            Id = new Guid("fbe342c7-9a7b-48d4-86bf-2cc9b32f3ac7"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("ea5a8d97-0940-4463-b07a-d6a10b6f0d08"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.0
                        },
                        new
                        {
                            Id = new Guid("4d0492d2-12c3-4adf-b35e-c3ba949092af"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("ea5a8d97-0940-4463-b07a-d6a10b6f0d08"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.0
                        },
                        new
                        {
                            Id = new Guid("63181747-3e61-4cdf-bd83-438f44f953c9"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("ea5a8d97-0940-4463-b07a-d6a10b6f0d08"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.0
                        },
                        new
                        {
                            Id = new Guid("43cced97-4cb6-413b-ad18-9241389d63b3"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("ea5a8d97-0940-4463-b07a-d6a10b6f0d08"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("5b20f57c-c7f0-4d2e-aa98-e8a250cd1e8f"),
                            DifficultyLevelId = new Guid("b3b0177d-baf9-4ad6-b1c1-002e1b776a10"),
                            FactorId = new Guid("fe85d6ab-ade6-412f-b2a6-7ca97f4f1da4"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("8e90a730-a896-41d2-96d9-08c1d47e74c0"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("fe85d6ab-ade6-412f-b2a6-7ca97f4f1da4"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("d86fc321-ee82-4db9-b664-db9730395841"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("fe85d6ab-ade6-412f-b2a6-7ca97f4f1da4"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.87
                        },
                        new
                        {
                            Id = new Guid("2474fdf5-1c38-4d46-a2e4-6fef3655d533"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("fe85d6ab-ade6-412f-b2a6-7ca97f4f1da4"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.0
                        },
                        new
                        {
                            Id = new Guid("9518e8b5-c821-4b75-b7dc-8aee1b39ed76"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("fe85d6ab-ade6-412f-b2a6-7ca97f4f1da4"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.29
                        },
                        new
                        {
                            Id = new Guid("48ef82ae-e8cc-4eb5-8aaf-8283296e1d00"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("fe85d6ab-ade6-412f-b2a6-7ca97f4f1da4"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.8100000000000001
                        },
                        new
                        {
                            Id = new Guid("bd4f0ee5-be9f-4298-a043-8424dd6d62d3"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("fe85d6ab-ade6-412f-b2a6-7ca97f4f1da4"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 2.6099999999999999
                        },
                        new
                        {
                            Id = new Guid("a9596334-4666-4b29-a6bd-4d622ae5397d"),
                            DifficultyLevelId = new Guid("b3b0177d-baf9-4ad6-b1c1-002e1b776a10"),
                            FactorId = new Guid("4feab03a-7415-4c72-8b3f-6901e014c25e"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.48999999999999999
                        },
                        new
                        {
                            Id = new Guid("7bb09544-59ff-4733-a023-bf5d952e01ee"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("4feab03a-7415-4c72-8b3f-6901e014c25e"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.59999999999999998
                        },
                        new
                        {
                            Id = new Guid("0ae2eaa5-e327-4425-95f1-822ae8ea01a6"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("4feab03a-7415-4c72-8b3f-6901e014c25e"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.82999999999999996
                        },
                        new
                        {
                            Id = new Guid("9107c797-fa19-48e0-ae64-300c78b62b84"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("4feab03a-7415-4c72-8b3f-6901e014c25e"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.0
                        },
                        new
                        {
                            Id = new Guid("3013382f-daa7-4333-a4b5-e09a92158212"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("4feab03a-7415-4c72-8b3f-6901e014c25e"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.3300000000000001
                        },
                        new
                        {
                            Id = new Guid("ae79da70-8847-4539-abb8-5cdf7d94772f"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("4feab03a-7415-4c72-8b3f-6901e014c25e"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.97
                        },
                        new
                        {
                            Id = new Guid("ff9377b2-17ac-4fbd-acbb-68b5aa4ea73a"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("4feab03a-7415-4c72-8b3f-6901e014c25e"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 2.7200000000000002
                        },
                        new
                        {
                            Id = new Guid("7c53bf48-3633-4727-84f3-d16765c20dce"),
                            DifficultyLevelId = new Guid("b3b0177d-baf9-4ad6-b1c1-002e1b776a10"),
                            FactorId = new Guid("9b7d2f14-9ec0-414c-806b-d5e607664031"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("2f46aca0-6752-4352-9b57-2fbdacb7d576"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("9b7d2f14-9ec0-414c-806b-d5e607664031"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("58b98824-d6af-4fea-92fe-3292cc18a7b1"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("9b7d2f14-9ec0-414c-806b-d5e607664031"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 0.94999999999999996
                        },
                        new
                        {
                            Id = new Guid("5d4848bd-c214-4159-b279-cf2eebee3fce"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("9b7d2f14-9ec0-414c-806b-d5e607664031"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.0
                        },
                        new
                        {
                            Id = new Guid("7908d221-07c3-4716-bbf6-6539503aec71"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("9b7d2f14-9ec0-414c-806b-d5e607664031"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.0700000000000001
                        },
                        new
                        {
                            Id = new Guid("4a070749-70e4-4099-867c-0ce887e974b2"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("9b7d2f14-9ec0-414c-806b-d5e607664031"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.1499999999999999
                        },
                        new
                        {
                            Id = new Guid("5fda3d4e-6657-4cb8-81bd-22c9b60f5a32"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("9b7d2f14-9ec0-414c-806b-d5e607664031"),
                            FactorTypeId = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Value = 1.24
                        },
                        new
                        {
                            Id = new Guid("05f60293-444f-44c0-9ed4-6d481f565f22"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("15140cfd-eacc-41f3-aae5-718980da88b9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 6.2000000000000002
                        },
                        new
                        {
                            Id = new Guid("c8003f13-5dad-401a-a001-bdf333f506ca"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("15140cfd-eacc-41f3-aae5-718980da88b9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 4.96
                        },
                        new
                        {
                            Id = new Guid("80ba2fb4-b9f1-4888-8469-8c4dbdc9ac33"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("15140cfd-eacc-41f3-aae5-718980da88b9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 3.7200000000000002
                        },
                        new
                        {
                            Id = new Guid("cb749915-4840-4ec7-8973-6587fd5f6552"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("15140cfd-eacc-41f3-aae5-718980da88b9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 2.48
                        },
                        new
                        {
                            Id = new Guid("d6d54404-f706-4535-af13-82bd6c0c3680"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("15140cfd-eacc-41f3-aae5-718980da88b9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 1.24
                        },
                        new
                        {
                            Id = new Guid("f73396af-6176-468d-abf3-d16555c63c3c"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("15140cfd-eacc-41f3-aae5-718980da88b9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("80835d99-cec6-454c-b490-52e484f094cb"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("b4a2b0b2-35c4-41d4-8ca7-1d2ebd1440e9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 5.0700000000000003
                        },
                        new
                        {
                            Id = new Guid("5e1378ea-d04f-47af-a161-b3aa5232c713"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("b4a2b0b2-35c4-41d4-8ca7-1d2ebd1440e9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 4.0499999999999998
                        },
                        new
                        {
                            Id = new Guid("cf453f03-5479-4396-ae8f-8d8f7bfa9283"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("b4a2b0b2-35c4-41d4-8ca7-1d2ebd1440e9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 3.04
                        },
                        new
                        {
                            Id = new Guid("0f4e8272-fe20-4665-b1c7-40358219826d"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("b4a2b0b2-35c4-41d4-8ca7-1d2ebd1440e9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 2.0299999999999998
                        },
                        new
                        {
                            Id = new Guid("218cc659-82f0-4843-94f0-702a5dfaeee2"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("b4a2b0b2-35c4-41d4-8ca7-1d2ebd1440e9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 1.01
                        },
                        new
                        {
                            Id = new Guid("26bb242d-fe62-4865-9b7e-74ecd8c85eb1"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("b4a2b0b2-35c4-41d4-8ca7-1d2ebd1440e9"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("f1bdbe86-1a83-4d68-99d6-bc5a2abcdc9a"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("186476d2-772b-4eb1-b140-b0c1a238ae11"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 7.0700000000000003
                        },
                        new
                        {
                            Id = new Guid("7f72fb34-c1ea-4df6-9777-09cc50f20737"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("186476d2-772b-4eb1-b140-b0c1a238ae11"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 5.6500000000000004
                        },
                        new
                        {
                            Id = new Guid("929ee2d0-b285-4c30-bf89-e371058ea6a8"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("186476d2-772b-4eb1-b140-b0c1a238ae11"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 4.2400000000000002
                        },
                        new
                        {
                            Id = new Guid("a1b726ed-b26e-4f23-8132-eee2438f2969"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("186476d2-772b-4eb1-b140-b0c1a238ae11"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 2.8300000000000001
                        },
                        new
                        {
                            Id = new Guid("d6e01529-603a-40c8-95e8-33548f52de0f"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("186476d2-772b-4eb1-b140-b0c1a238ae11"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 1.4099999999999999
                        },
                        new
                        {
                            Id = new Guid("44666184-1e47-4bcd-bbe3-60bfbfec5c9e"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("186476d2-772b-4eb1-b140-b0c1a238ae11"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("c3dc44c9-1fbe-4630-bf9c-1f809a0519b9"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("74b32655-e330-4e74-a1a2-e1e92023f676"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 5.4800000000000004
                        },
                        new
                        {
                            Id = new Guid("2fef6711-824d-4a7e-bc76-df7951b3d211"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("74b32655-e330-4e74-a1a2-e1e92023f676"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 4.3799999999999999
                        },
                        new
                        {
                            Id = new Guid("5602f52e-029d-41ca-84a4-240f70edf8c5"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("74b32655-e330-4e74-a1a2-e1e92023f676"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 3.29
                        },
                        new
                        {
                            Id = new Guid("d8f6e657-47d8-45eb-8cfa-50ef7f3b9094"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("74b32655-e330-4e74-a1a2-e1e92023f676"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 2.1899999999999999
                        },
                        new
                        {
                            Id = new Guid("e77e1650-444e-4363-a3f2-1cb04ccb7b83"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("74b32655-e330-4e74-a1a2-e1e92023f676"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 1.1000000000000001
                        },
                        new
                        {
                            Id = new Guid("50e9950f-e449-425b-b2c4-00416bfd7002"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("74b32655-e330-4e74-a1a2-e1e92023f676"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("dba6f127-5c75-4e38-8546-34e42089f6dd"),
                            DifficultyLevelId = new Guid("0c5fd362-b14d-4186-bef9-979ed21b9575"),
                            FactorId = new Guid("c69edb03-4fb6-4071-bcc5-f158808c69ee"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 7.7999999999999998
                        },
                        new
                        {
                            Id = new Guid("158ebafb-d831-408c-a7db-989c3674a5d7"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("c69edb03-4fb6-4071-bcc5-f158808c69ee"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 6.2400000000000002
                        },
                        new
                        {
                            Id = new Guid("101f9ac2-462a-4e73-bff3-d2de9bd39c26"),
                            DifficultyLevelId = new Guid("b29fa523-bd56-48be-9adc-cbd23f0af646"),
                            FactorId = new Guid("c69edb03-4fb6-4071-bcc5-f158808c69ee"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 4.6799999999999997
                        },
                        new
                        {
                            Id = new Guid("a0229597-864b-49e7-ab48-e8bacd811ebf"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("c69edb03-4fb6-4071-bcc5-f158808c69ee"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 3.1200000000000001
                        },
                        new
                        {
                            Id = new Guid("b27a1cf4-8043-4a26-a149-4bbac0efa9d7"),
                            DifficultyLevelId = new Guid("f5ad4a31-a240-41bd-bffd-245103b88d0f"),
                            FactorId = new Guid("c69edb03-4fb6-4071-bcc5-f158808c69ee"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 1.5600000000000001
                        },
                        new
                        {
                            Id = new Guid("c339e10e-0121-49b7-93e6-2a9e29a99b9b"),
                            DifficultyLevelId = new Guid("c15c008f-f7f4-4dae-95bb-02a32bb2b8b1"),
                            FactorId = new Guid("c69edb03-4fb6-4071-bcc5-f158808c69ee"),
                            FactorTypeId = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Value = 0.0
                        },
                        new
                        {
                            Id = new Guid("79e53275-6e20-41a9-ae04-1f7cec1ec9e1"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("e777b5bf-559d-4194-a711-89ca4ca4a212"),
                            FactorTypeId = new Guid("cdd64d87-bb9a-4c17-b809-05c4454e6998"),
                            Value = 7.0
                        },
                        new
                        {
                            Id = new Guid("ad714742-d8bf-4a86-839e-9fd98822ba87"),
                            DifficultyLevelId = new Guid("5540d80e-8fae-4afb-a475-b49c1a9c4c2e"),
                            FactorId = new Guid("e777b5bf-559d-4194-a711-89ca4ca4a212"),
                            FactorTypeId = new Guid("cdd64d87-bb9a-4c17-b809-05c4454e6998"),
                            Value = 10.0
                        },
                        new
                        {
                            Id = new Guid("98ef60ad-14da-422a-b24c-9f3eb6d58648"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("e777b5bf-559d-4194-a711-89ca4ca4a212"),
                            FactorTypeId = new Guid("cdd64d87-bb9a-4c17-b809-05c4454e6998"),
                            Value = 15.0
                        },
                        new
                        {
                            Id = new Guid("226f4f9f-8563-437d-859b-b0bdf72e74d1"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("d7c7beea-3351-482b-82e1-8df4573395b9"),
                            FactorTypeId = new Guid("cdd64d87-bb9a-4c17-b809-05c4454e6998"),
                            Value = 5.0
                        },
                        new
                        {
                            Id = new Guid("61df3738-c7c6-4dd5-95e3-aac57b78062a"),
                            DifficultyLevelId = new Guid("5540d80e-8fae-4afb-a475-b49c1a9c4c2e"),
                            FactorId = new Guid("d7c7beea-3351-482b-82e1-8df4573395b9"),
                            FactorTypeId = new Guid("cdd64d87-bb9a-4c17-b809-05c4454e6998"),
                            Value = 7.0
                        },
                        new
                        {
                            Id = new Guid("bdeb4acc-667c-4ee9-a9db-8d20fd1d68eb"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("d7c7beea-3351-482b-82e1-8df4573395b9"),
                            FactorTypeId = new Guid("cdd64d87-bb9a-4c17-b809-05c4454e6998"),
                            Value = 10.0
                        },
                        new
                        {
                            Id = new Guid("ff79e6d5-606d-4d9f-a046-0157ff60de8c"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("73a3a716-f447-4057-99ca-1500d438ba58"),
                            FactorTypeId = new Guid("63715754-cdfb-4320-9c17-72648673cb4b"),
                            Value = 3.0
                        },
                        new
                        {
                            Id = new Guid("d244f6c3-2695-4a18-9ecf-7aeb9e3ad1f3"),
                            DifficultyLevelId = new Guid("5540d80e-8fae-4afb-a475-b49c1a9c4c2e"),
                            FactorId = new Guid("73a3a716-f447-4057-99ca-1500d438ba58"),
                            FactorTypeId = new Guid("63715754-cdfb-4320-9c17-72648673cb4b"),
                            Value = 4.0
                        },
                        new
                        {
                            Id = new Guid("47eab601-4c65-405a-91b5-21bcc1a5acec"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("73a3a716-f447-4057-99ca-1500d438ba58"),
                            FactorTypeId = new Guid("63715754-cdfb-4320-9c17-72648673cb4b"),
                            Value = 6.0
                        },
                        new
                        {
                            Id = new Guid("08386350-d2bb-48d8-894a-9f8f25fe00de"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("31f2f6d6-a5fa-4da3-adcf-0a5cc237eb95"),
                            FactorTypeId = new Guid("63715754-cdfb-4320-9c17-72648673cb4b"),
                            Value = 4.0
                        },
                        new
                        {
                            Id = new Guid("089ffa0a-9691-4038-89f2-d0febb22058a"),
                            DifficultyLevelId = new Guid("5540d80e-8fae-4afb-a475-b49c1a9c4c2e"),
                            FactorId = new Guid("31f2f6d6-a5fa-4da3-adcf-0a5cc237eb95"),
                            FactorTypeId = new Guid("63715754-cdfb-4320-9c17-72648673cb4b"),
                            Value = 5.0
                        },
                        new
                        {
                            Id = new Guid("c9e269e2-9faf-4e99-8066-08ee3c8b01d7"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("31f2f6d6-a5fa-4da3-adcf-0a5cc237eb95"),
                            FactorTypeId = new Guid("63715754-cdfb-4320-9c17-72648673cb4b"),
                            Value = 7.0
                        },
                        new
                        {
                            Id = new Guid("df789397-c69c-4305-b33c-c49af5f8fa3a"),
                            DifficultyLevelId = new Guid("fc6ea190-24a2-42d0-b2aa-783758efa82d"),
                            FactorId = new Guid("7a540a8b-0198-40d8-9185-2e02ba5eb1ab"),
                            FactorTypeId = new Guid("63715754-cdfb-4320-9c17-72648673cb4b"),
                            Value = 3.0
                        },
                        new
                        {
                            Id = new Guid("66744342-2820-4fbf-9f97-917f3099647b"),
                            DifficultyLevelId = new Guid("5540d80e-8fae-4afb-a475-b49c1a9c4c2e"),
                            FactorId = new Guid("7a540a8b-0198-40d8-9185-2e02ba5eb1ab"),
                            FactorTypeId = new Guid("63715754-cdfb-4320-9c17-72648673cb4b"),
                            Value = 4.0
                        },
                        new
                        {
                            Id = new Guid("cc0ca9a0-e14d-468a-8ca1-a58f23aaeda3"),
                            DifficultyLevelId = new Guid("1aa2ef63-41db-4f3d-aacd-e38c7e4639ac"),
                            FactorId = new Guid("7a540a8b-0198-40d8-9185-2e02ba5eb1ab"),
                            FactorTypeId = new Guid("63715754-cdfb-4320-9c17-72648673cb4b"),
                            Value = 6.0
                        });
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluationAttributes.EvaluationAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FactorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FactorTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EvaluationAttributes");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Evaluators");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluatorToEvaluatedFactor.EvaluatorToEvaluatedFactor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EvaluatedFactorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EvaluatorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EvaluatedFactorId");

                    b.HasIndex("EvaluatorId");

                    b.ToTable("EvaluatorToEvaluatedFactors");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.FactorType.FactorType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FactorTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b03771e5-488a-449f-b886-19c581b63cde"),
                            Name = "Influence factor"
                        },
                        new
                        {
                            Id = new Guid("eb8f98d6-1c46-4721-9ad6-c464b9029905"),
                            Name = "Scale factor"
                        },
                        new
                        {
                            Id = new Guid("cdd64d87-bb9a-4c17-b809-05c4454e6998"),
                            Name = "Information object"
                        },
                        new
                        {
                            Id = new Guid("63715754-cdfb-4320-9c17-72648673cb4b"),
                            Name = "Function"
                        });
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Profile.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EvaluatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("EvaluatorId");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramLanguage.ProgramLanguage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("SLOC")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProgramLanguages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("794b2ac4-3310-4264-a367-d1e665a55458"),
                            Name = "ABAP (SAP)",
                            SLOC = 28
                        },
                        new
                        {
                            Id = new Guid("c26246c3-caad-4d34-a42a-f6517cf45ef6"),
                            Name = "ASP",
                            SLOC = 51
                        },
                        new
                        {
                            Id = new Guid("e3810495-b6ab-42af-87a6-9ba5f7393cd5"),
                            Name = "Assembler",
                            SLOC = 119
                        },
                        new
                        {
                            Id = new Guid("a879c89b-11e3-4ae1-8b2a-eae6a126557c"),
                            Name = "Brio +",
                            SLOC = 14
                        },
                        new
                        {
                            Id = new Guid("491c0205-a64e-46d1-8be0-25fabe8b6ae6"),
                            Name = "C",
                            SLOC = 97
                        },
                        new
                        {
                            Id = new Guid("f3cd8a9f-dc66-46a4-b41b-f57c1d82a1ce"),
                            Name = "C++",
                            SLOC = 50
                        },
                        new
                        {
                            Id = new Guid("aef38b0a-456c-455b-acca-fe7600ec8de8"),
                            Name = "C#",
                            SLOC = 54
                        },
                        new
                        {
                            Id = new Guid("4e943d03-e4be-4ed2-b492-421b6c7b1c92"),
                            Name = "COBOL",
                            SLOC = 61
                        },
                        new
                        {
                            Id = new Guid("32c19d74-6993-4d0e-8647-cdf75541e728"),
                            Name = "Cognos Impromptu Scripts +",
                            SLOC = 47
                        },
                        new
                        {
                            Id = new Guid("00240fb2-4f29-431f-93b9-adfa31ceaaca"),
                            Name = "Cross System Products (CSP) +",
                            SLOC = 20
                        },
                        new
                        {
                            Id = new Guid("b8c17601-7672-4b36-b4d5-975573edcaba"),
                            Name = "Cool:Gen/IEF",
                            SLOC = 32
                        },
                        new
                        {
                            Id = new Guid("676bd39b-61fa-4718-af90-e2378851acdd"),
                            Name = "Datastage",
                            SLOC = 71
                        },
                        new
                        {
                            Id = new Guid("10e69836-68a8-41cb-96c8-4ca6bc1190d1"),
                            Name = "Excel",
                            SLOC = 209
                        },
                        new
                        {
                            Id = new Guid("736c315e-ec2b-4abf-8c4b-7f202939dced"),
                            Name = "Focus",
                            SLOC = 43
                        },
                        new
                        {
                            Id = new Guid("c77c165f-3c3a-4e56-848f-0afe15af2315"),
                            Name = "FoxPro",
                            SLOC = 36
                        },
                        new
                        {
                            Id = new Guid("22a1ad68-c278-4236-861b-0a256ca2a0b3"),
                            Name = "HTML",
                            SLOC = 34
                        },
                        new
                        {
                            Id = new Guid("02f4ccdb-9fdb-4c65-87a8-3567d84a1781"),
                            Name = "J2EE",
                            SLOC = 46
                        },
                        new
                        {
                            Id = new Guid("2229a77c-bdb4-4737-aaab-a5b456f74126"),
                            Name = "Java",
                            SLOC = 53
                        },
                        new
                        {
                            Id = new Guid("ee1f313e-9603-4ebe-a3bd-e0da9c639a7d"),
                            Name = "JavaScript",
                            SLOC = 47
                        },
                        new
                        {
                            Id = new Guid("98254d9f-f5ea-46f5-9278-fc77c8ff2b5a"),
                            Name = "JCL",
                            SLOC = 62
                        },
                        new
                        {
                            Id = new Guid("8a889366-5efc-4bd4-be67-1373938692eb"),
                            Name = "LINC II",
                            SLOC = 29
                        },
                        new
                        {
                            Id = new Guid("9f9752c2-18db-4b97-9d61-752b20aabb0c"),
                            Name = "Lotus Notes",
                            SLOC = 23
                        },
                        new
                        {
                            Id = new Guid("d1627cf2-b9ad-46ac-9e84-93438f4ed0d1"),
                            Name = "Natural",
                            SLOC = 40
                        },
                        new
                        {
                            Id = new Guid("34cb9cbc-564c-4494-bfda-941473f35341"),
                            Name = ".NET",
                            SLOC = 57
                        },
                        new
                        {
                            Id = new Guid("c16181c5-3493-4223-8267-9d4d71b50eed"),
                            Name = "Oracle",
                            SLOC = 37
                        });
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametr.ProgramsParametr", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProgramLanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ProgramLanguageId");

                    b.ToTable("ProgramsParametrs");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametrToSubjectAreaElement.ProgramsParametrToSubjectAreaElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProgramsParametrId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectAreaElementId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProgramsParametrId");

                    b.HasIndex("SubjectAreaElementId");

                    b.ToTable("ProgramsParametrToSubjectAreaElements");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", "Creator")
                        .WithMany("Applications")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationStatus.ApplicationStatus", "Status")
                        .WithMany("Applications")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.ProcedureApplication", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationStatus.ApplicationStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationToEvaluator.ApplicationToEvaluator", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", "Application")
                        .WithMany("ApplicationToEvaluators")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", "Evaluator")
                        .WithMany("ApplicationToEvaluators")
                        .HasForeignKey("EvaluatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Evaluator");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationToFactor.ApplicationToFactor", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", "Application")
                        .WithMany("Factors")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.DifficultyLevelsTypeToFactorType.DifficultyLevelsTypeToFactorType", "DifficultyLevelsTypeToFactorType")
                        .WithMany("ApplicationToFactors")
                        .HasForeignKey("DifficultyLevelsTypeToFactorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("DifficultyLevelsTypeToFactorType");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Department.Department", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Department.Department", "Parent")
                        .WithMany("SubDepartments")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.DifficultyLevels.DifficultyLevel", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluationAttributes.EvaluationAttribute", null)
                        .WithMany("DifficultyLevels")
                        .HasForeignKey("EvaluationAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.DifficultyLevelsTypeToFactorType.DifficultyLevelsTypeToFactorType", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.DifficultyLevelsType.DifficultyLevelsType", "DifficultyLevel")
                        .WithMany("DifficultyLevelsTypeToFactorTypes")
                        .HasForeignKey("DifficultyLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Attribute.Attribute", "Factor")
                        .WithMany("DifficultyLevelsTypeToFactorTypes")
                        .HasForeignKey("FactorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.FactorType.FactorType", "FactorType")
                        .WithMany("DifficultyLevelsTypeToFactorTypes")
                        .HasForeignKey("FactorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DifficultyLevel");

                    b.Navigation("Factor");

                    b.Navigation("FactorType");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Department.Department", "Department")
                        .WithMany("Evaluators")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluatorToEvaluatedFactor.EvaluatorToEvaluatedFactor", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationToFactor.ApplicationToFactor", "EvaluatedFactor")
                        .WithMany("EvaluatorToEvaluatedFactor")
                        .HasForeignKey("EvaluatedFactorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", "Evaluator")
                        .WithMany("EvaluatorToEvaluatedFactor")
                        .HasForeignKey("EvaluatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvaluatedFactor");

                    b.Navigation("Evaluator");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Profile.Profile", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Attribute.Attribute", "Attribute")
                        .WithMany("Profiles")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", "Evaluator")
                        .WithMany("Profiles")
                        .HasForeignKey("EvaluatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Evaluator");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametr.ProgramsParametr", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", "Application")
                        .WithMany("ProgramsParametrs")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramLanguage.ProgramLanguage", "ProgramLanguage")
                        .WithMany("ProgramsParametrs")
                        .HasForeignKey("ProgramLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("ProgramLanguage");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametrToSubjectAreaElement.ProgramsParametrToSubjectAreaElement", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametr.ProgramsParametr", "ProgramsParametr")
                        .WithMany("ProgramsParametrToSubjectAreaElements")
                        .HasForeignKey("ProgramsParametrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationToFactor.ApplicationToFactor", "SubjectAreaElement")
                        .WithMany("ProgramsParametrToSubjectAreaElements")
                        .HasForeignKey("SubjectAreaElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramsParametr");

                    b.Navigation("SubjectAreaElement");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", b =>
                {
                    b.Navigation("ApplicationToEvaluators");

                    b.Navigation("Factors");

                    b.Navigation("ProgramsParametrs");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationStatus.ApplicationStatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationToFactor.ApplicationToFactor", b =>
                {
                    b.Navigation("EvaluatorToEvaluatedFactor");

                    b.Navigation("ProgramsParametrToSubjectAreaElements");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Attribute.Attribute", b =>
                {
                    b.Navigation("DifficultyLevelsTypeToFactorTypes");

                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Department.Department", b =>
                {
                    b.Navigation("Evaluators");

                    b.Navigation("SubDepartments");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.DifficultyLevelsType.DifficultyLevelsType", b =>
                {
                    b.Navigation("DifficultyLevelsTypeToFactorTypes");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.DifficultyLevelsTypeToFactorType.DifficultyLevelsTypeToFactorType", b =>
                {
                    b.Navigation("ApplicationToFactors");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluationAttributes.EvaluationAttribute", b =>
                {
                    b.Navigation("DifficultyLevels");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", b =>
                {
                    b.Navigation("ApplicationToEvaluators");

                    b.Navigation("Applications");

                    b.Navigation("EvaluatorToEvaluatedFactor");

                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.FactorType.FactorType", b =>
                {
                    b.Navigation("DifficultyLevelsTypeToFactorTypes");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramLanguage.ProgramLanguage", b =>
                {
                    b.Navigation("ProgramsParametrs");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametr.ProgramsParametr", b =>
                {
                    b.Navigation("ProgramsParametrToSubjectAreaElements");
                });
#pragma warning restore 612, 618
        }
    }
}
