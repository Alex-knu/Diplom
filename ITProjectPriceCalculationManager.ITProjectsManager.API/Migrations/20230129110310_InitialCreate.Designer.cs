// <auto-generated />
using ITProjectPriceCalculationManager.ITProjectsManager.API.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ITProjectPriceCalculationManager.ITProjectsManager.API.Migrations
{
    [DbContext(typeof(ITProjectPriceCalculationManagerDbContext))]
    [Migration("20230129110310_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageCostLabor")
                        .HasColumnType("double precision");

                    b.Property<double>("AverageMonthlyRateWorkingHours")
                        .HasColumnType("double precision");

                    b.Property<double>("Overhead")
                        .HasColumnType("double precision");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("Profit")
                        .HasColumnType("double precision");

                    b.Property<double>("SocialInsurance")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramLanguage.ProgramLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("SLOC")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ProgramLanguages");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametr.ProgramsParametr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<int>("ProgramLanguageId")
                        .HasColumnType("integer");

                    b.Property<int>("SLOC")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ProgramLanguageId");

                    b.ToTable("ProgramsParametrs");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametrToSubjectAreaElement.ProgramsParametrToSubjectAreaElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProgramsParametrId")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectAreaElementId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProgramsParametrId");

                    b.HasIndex("SubjectAreaElementId");

                    b.ToTable("ProgramsParametrToSubjectAreaElements");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.SubjectAreaElement.SubjectAreaElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("DifficultyLevelsType")
                        .HasMaxLength(256)
                        .HasColumnType("integer");

                    b.Property<int>("SubjectAreaType")
                        .HasMaxLength(256)
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SubjectAreaElements");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametr.ProgramsParametr", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", "Application")
                        .WithMany("ProgramsParametrs")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramLanguage.ProgramLanguage", "ProgramLanguage")
                        .WithMany("ProgramsParametrs")
                        .HasForeignKey("ProgramLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("ProgramLanguage");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametrToSubjectAreaElement.ProgramsParametrToSubjectAreaElement", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametr.ProgramsParametr", "ProgramsParametr")
                        .WithMany("ProgramsParametrToSubjectAreaElements")
                        .HasForeignKey("ProgramsParametrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.SubjectAreaElement.SubjectAreaElement", "SubjectAreaElement")
                        .WithMany("ProgramsParametrToSubjectAreaElements")
                        .HasForeignKey("SubjectAreaElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramsParametr");

                    b.Navigation("SubjectAreaElement");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", b =>
                {
                    b.Navigation("ProgramsParametrs");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramLanguage.ProgramLanguage", b =>
                {
                    b.Navigation("ProgramsParametrs");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ProgramsParametr.ProgramsParametr", b =>
                {
                    b.Navigation("ProgramsParametrToSubjectAreaElements");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.SubjectAreaElement.SubjectAreaElement", b =>
                {
                    b.Navigation("ProgramsParametrToSubjectAreaElements");
                });
#pragma warning restore 612, 618
        }
    }
}
