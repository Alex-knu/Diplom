// <auto-generated />
using System;
using ITProjectPriceCalculationManager.ITProjectsManager.API.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITProjectPriceCalculationManager.ITProjectsManager.API.Migrations
{
    [DbContext(typeof(ITProjectPriceCalculationManagerDbContext))]
    partial class ITProjectPriceCalculationManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AverageCostLabor")
                        .HasColumnType("float");

                    b.Property<double>("AverageMonthlyRateWorkingHours")
                        .HasColumnType("float");

                    b.Property<double?>("ConfidenceArea")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Overhead")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Profit")
                        .HasColumnType("float");

                    b.Property<double>("SocialInsurance")
                        .HasColumnType("float");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("StatusId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.ProcedureApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AverageCostLabor")
                        .HasColumnType("float");

                    b.Property<double>("AverageMonthlyRateWorkingHours")
                        .HasColumnType("float");

                    b.Property<double?>("ConfidenceArea")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Overhead")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Profit")
                        .HasColumnType("float");

                    b.Property<double>("SocialInsurance")
                        .HasColumnType("float");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("StatusId");

                    b.ToTable("ProcedureApplications");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationStatus.ApplicationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4706d234-e64d-4ab2-bed0-6086e10c3325"),
                            Name = "Нова"
                        },
                        new
                        {
                            Id = new Guid("c4a6971d-a0de-4d6d-97fe-67db465e330f"),
                            Name = "На оцінюванні"
                        },
                        new
                        {
                            Id = new Guid("9806f24d-89d7-42f5-80b4-d39ac7798949"),
                            Name = "На доопрацюванні"
                        },
                        new
                        {
                            Id = new Guid("56533c08-2c5b-4bba-8dc2-9efe0fb3dc66"),
                            Name = "Оцінено"
                        });
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationToEvaluator.ApplicationToEvaluator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ConfidenceArea")
                        .HasColumnType("float");

                    b.Property<Guid>("EvaluatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("SelfEvaluation")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("EvaluatorId");

                    b.ToTable("ApplicationToEvaluators");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.BelongingFunction.BelongingFunction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BelongingFunctions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f4bf3d51-4f18-42e5-b92f-1e8cf40dca1a"),
                            Name = "SigmoidMembershipFunction"
                        },
                        new
                        {
                            Id = new Guid("a13bcaf8-0d49-4df7-ba32-0d6fd5b4c4c0"),
                            Name = "GaussianMembershipFunction"
                        },
                        new
                        {
                            Id = new Guid("6d8622f5-8e17-49a9-b66e-5e11fd761278"),
                            Name = "ExponentialMembershipFunction"
                        },
                        new
                        {
                            Id = new Guid("9c4b86fc-0f8f-4e26-8de0-29c57b076a54"),
                            Name = "QuadraticMembershipFunction"
                        });
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Department.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluateParameter.EvaluateParameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BelongingFunctionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ParameterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParameterValueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BelongingFunctionId");

                    b.HasIndex("ParameterId");

                    b.ToTable("EvaluateParameters");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluateParametersToAgents.EvaluateParametersToAgents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParameterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AgentId")
                        .IsUnique();

                    b.HasIndex("ParameterId")
                        .IsUnique();

                    b.ToTable("EvaluateParametersToAgents");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Evaluators");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Parameter.Parameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ParameterValue.ParameterValue", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("A")
                        .HasColumnType("real");

                    b.Property<float>("B")
                        .HasColumnType("real");

                    b.Property<float>("C")
                        .HasColumnType("real");

                    b.Property<float>("D")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("ParameterValues");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Profile.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EvaluatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EvaluatorId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", "Creator")
                        .WithMany("Applications")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationStatus.ApplicationStatus", "Status")
                        .WithMany("Applications")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.ProcedureApplication", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationStatus.ApplicationStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationToEvaluator.ApplicationToEvaluator", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", "Application")
                        .WithMany("ApplicationToEvaluators")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", "Evaluator")
                        .WithMany("ApplicationToEvaluators")
                        .HasForeignKey("EvaluatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Evaluator");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Department.Department", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Department.Department", "Parent")
                        .WithMany("SubDepartments")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluateParameter.EvaluateParameter", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.BelongingFunction.BelongingFunction", "BelongingFunction")
                        .WithMany("EvaluateParameters")
                        .HasForeignKey("BelongingFunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Parameter.Parameter", "Parameter")
                        .WithMany("EvaluateParameters")
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BelongingFunction");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluateParametersToAgents.EvaluateParametersToAgents", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", "Agent")
                        .WithOne("EvaluateParametersToAgent")
                        .HasForeignKey("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluateParametersToAgents.EvaluateParametersToAgents", "AgentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Parameter.Parameter", "Parameter")
                        .WithOne("EvaluateParametersToAgent")
                        .HasForeignKey("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluateParametersToAgents.EvaluateParametersToAgents", "ParameterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Department.Department", "Department")
                        .WithMany("Evaluators")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Parameter.Parameter", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", "Application")
                        .WithMany("ApplicationToParameters")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ParameterValue.ParameterValue", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluateParameter.EvaluateParameter", "EvaluateParameter")
                        .WithOne("EvaluateParameterValue")
                        .HasForeignKey("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ParameterValue.ParameterValue", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvaluateParameter");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Profile.Profile", b =>
                {
                    b.HasOne("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", "Evaluator")
                        .WithMany("Profiles")
                        .HasForeignKey("EvaluatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evaluator");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Application.Application", b =>
                {
                    b.Navigation("ApplicationToEvaluators");

                    b.Navigation("ApplicationToParameters");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.ApplicationStatus.ApplicationStatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.BelongingFunction.BelongingFunction", b =>
                {
                    b.Navigation("EvaluateParameters");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Department.Department", b =>
                {
                    b.Navigation("Evaluators");

                    b.Navigation("SubDepartments");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.EvaluateParameter.EvaluateParameter", b =>
                {
                    b.Navigation("EvaluateParameterValue");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Evaluator.Evaluator", b =>
                {
                    b.Navigation("ApplicationToEvaluators");

                    b.Navigation("Applications");

                    b.Navigation("EvaluateParametersToAgent");

                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("ITProjectPriceCalculationManager.ITProjectsManager.API.Core.Entities.Parameter.Parameter", b =>
                {
                    b.Navigation("EvaluateParameters");

                    b.Navigation("EvaluateParametersToAgent");
                });
#pragma warning restore 612, 618
        }
    }
}
