version: '3.7'

networks:
  docker-dev:
    driver: bridge 

services:
  it_project_price_calculation_manager.web_app:
    hostname: web_app
    image: ${DOCKER_REGISTRY-}it_project_price_calculation_manager.web_app
    restart: always
    build: 
      context: .
      dockerfile: ITProjectPriceCalculationManager.WebApp/Dockerfile
    ports:
      - "5000:80"
      - "5001:443"
    networks:
      docker-dev:
        aliases:
          - web_app

  it_project_price_calculation_manager.price_predictor.api:
    hostname: price_predictor.api
    image: ${DOCKER_REGISTRY-}it_project_price_calculation_manager.price_predictor.api
    restart: always
    build: 
      context: .
      dockerfile: ITProjectPriceCalculationManager.PricePredictor.API/Dockerfile
    ports:
      - "5004:80"
      - "5005:443"
    networks:
      docker-dev:
        aliases:
          - price_predictor.api

  it_project_price_calculation_manager.it_projects.api:
    hostname: it_projects.api
    image: ${DOCKER_REGISTRY-}it_project_price_calculation_manager.it_projects.api
    restart: always
    build: 
      context: .
      dockerfile: ITProjectPriceCalculationManager.ITProjects.API/Dockerfile
    ports:
      - "5002:80"
      - "5003:443"
    networks:
      docker-dev:
        aliases:
          - it_projects.api
    depends_on:
      - it_project_price_calculation_manager.postgres

  it_project_price_calculation_manager.it_projects_manager.api:
    hostname: it_projects_manager.api
    image: ${DOCKER_REGISTRY-}it_project_price_calculation_manager.it_projects_manager.api
    restart: always
    build: 
      context: .
      dockerfile: ITProjectPriceCalculationManager.ITProjectsManager.API/Dockerfile
    ports:
      - "5006:80"
      - "5007:443"
    networks:
      docker-dev:
        aliases:
          - it_projects_manager.api
    depends_on:
      - it_project_price_calculation_manager.postgres

  it_project_price_calculation_manager.postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5100:5432"
    #volumes: 
      # - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      # - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql